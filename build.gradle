description = 'JCL'
group = 'jcl'
version = '1.0-SNAPSHOT'

buildscript {
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}

	String springBootVersion = '1.3.0.RC1'
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'spring-boot'

jar {
	baseName = 'jcl'
	version = '1.0-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava {
	options.compilerArgs << "-Xlint"
}

apply plugin: 'application'

//********* DEPENDENCIES *********//

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

String commonsLangVersion = '3.4'
String commonsMathVersion = '3.5'
String commonsCollectionsVersion = '4.0'
String commonsIoVersion = '2.4'
String commonsPrimitivesVersion = '1.0'

String apfloatVersion = '1.8.2'

String asmAllVersion = '5.0.4'

String javaHelpVersion = '2.0.05'

String testngVersion = '6.9.6'

dependencies {
	compile("org.apache.commons:commons-lang3:${commonsLangVersion}")
	compile("org.apache.commons:commons-math3:${commonsMathVersion}")
	compile("org.apache.commons:commons-collections4:${commonsCollectionsVersion}")
	compile("commons-io:commons-io:${commonsIoVersion}")
	compile("commons-primitives:commons-primitives:${commonsPrimitivesVersion}")

	compile("org.apfloat:apfloat:${apfloatVersion}")

	compile("org.ow2.asm:asm-all:${asmAllVersion}")

	compile("org.springframework.boot:spring-boot-starter")
	compile("org.springframework.boot:spring-boot-loader")
	compile("org.springframework.boot:spring-boot-starter-integration")

	compile("javax.help:javahelp:${javaHelpVersion}")

	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile("org.testng:testng:${testngVersion}")
}

task copyToLib(type: Copy) {
	into "$buildDir/libs"
	from configurations.runtime
}
build.dependsOn(copyToLib)

//********* TEST *********//

apply plugin: 'jacoco'
jacoco {
	toolVersion = '0.7.5.201505241946'
}
test {
	useTestNG()

	jacoco {
		append = true
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpFile = file("$buildDir/jacoco/classpathdumps")
	}
}
jacocoTestReport {
	group = "Reporting"
	description = "Generate Jacoco coverage reports after running tests."
	additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
	reports {
		xml.enabled false
		csv.enabled false
		html.destination "$buildDir/jacocoHtml"
	}
}

//********* SONAR *********//

apply plugin: 'sonar-runner'
sonarRunner {
	sonarProperties {
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.jdbc.url", "jdbc:h2:tcp://localhost:9092/sonar"
		property "sonar.jdbc.username", "sonar"
		property "sonar.jdbc.password", "sonar"
	}
}
