description = "JCL Application"

apply plugin: "org.springframework.boot"

sourceSets {
	main {
		resources {
			srcDir 'src/main/lisp'
		}
	}
}

dependencies {
	compile(project(":jcl-core"))
	compile(project(":jcl-compiler"))
	compile(project(":jcl-reader"))
	compile(project(":jcl-functions"))

	compile("org.apache.commons:commons-lang3")
	compile("org.slf4j:slf4j-api")
	compile("org.springframework.boot:spring-boot")
	compile("org.springframework.boot:spring-boot-autoconfigure")
	compile("org.springframework:spring-context")
	compile("org.springframework:spring-beans")

	runtime("org.springframework.boot:spring-boot-starter-logging")

	testCompile("junit:junit")
}

bootRepackage {
	mainClass = "jcl.system.JCL"
}

//********* LISP JAR GENERATION *********//

def lispSourceTree = fileTree(dir: 'src/main/lisp/jcl/compiler', include: '**/*.lisp')
def lispCompiledTree = fileTree(dir: 'compiled-lisp', include: '**/*.jar')

task cleanLispJars {
	def compiledLispDirectory = "$projectDir/compiled-lisp"
	new File(compiledLispDirectory).mkdirs()

	lispCompiledTree.each { file ->
		doLast {
			println("Removing Lisp Jar")
			println(file.absolutePath)

			file.delete()
		}
	}
}

task generateLispJars {
	def compiledLispDirectory = "$projectDir/compiled-lisp"
	new File(compiledLispDirectory).mkdirs()

	lispSourceTree.each { file ->
		doLast {
			println("Generating Lisp Jar")
			println(file.absolutePath)

			javaexec {
				main = "jcl.system.JCL"
				classpath sourceSets.main.runtimeClasspath
				args["--compileFileSrcDir=$file.absolutePath"]
				args["--compileFileDestDir=$compiledLispDirectory/"]
			}
			// TODO: Fix the need to prepend a '/' to the directory name. This is a problem with the Pathname object.
			println()
		}
	}
}

task unpackLispJars {
	lispCompiledTree.each { file ->
		doLast {
			println("Unpacking Lisp Jar")
			println(file.absolutePath)

			copy {
				from zipTree(file)
				into compileJava.destinationDir
			}
		}
	}
}
//jar.dependsOn(unpackLispJars)