package jcl.lang.statics;

import jcl.lang.KeywordStruct;
import jcl.lang.SymbolStruct;
import jcl.lang.internal.DeclarationStructImpl;
import jcl.lang.internal.SpecialOperatorStructImpl;

public interface CommonLispSymbols {

	SymbolStruct AND_ALLOW_OTHER_KEYS = CompilerConstants.ALLOW_OTHER_KEYS;
	SymbolStruct AND_AUX = CompilerConstants.AUX;
	SymbolStruct AND_BODY = CompilerConstants.BODY;
	SymbolStruct AND_ENVIRONMENT = CompilerConstants.ENVIRONMENT;
	SymbolStruct AND_KEY = CompilerConstants.KEY;
	SymbolStruct AND_OPTIONAL = CompilerConstants.OPTIONAL;
	SymbolStruct AND_REST = CompilerConstants.REST;
	SymbolStruct AND_WHOLE = CompilerConstants.WHOLE;

	SymbolStruct ARRAY_DIMENSION_LIMIT = ArrayConstants.ARRAY_DIMENSION_LIMIT;
	SymbolStruct ARRAY_RANK_LIMIT = ArrayConstants.ARRAY_RANK_LIMIT;
	SymbolStruct ARRAY_TOTAL_SIZE_LIMIT = ArrayConstants.ARRAY_TOTAL_SIZE_LIMIT;
	SymbolStruct BOOLE_1 = NumberConstants.BOOLE_1;
	SymbolStruct BOOLE_2 = NumberConstants.BOOLE_2;
	SymbolStruct BOOLE_AND = NumberConstants.BOOLE_AND;
	SymbolStruct BOOLE_ANDC1 = NumberConstants.BOOLE_ANDC1;
	SymbolStruct BOOLE_ANDC2 = NumberConstants.BOOLE_ANDC2;
	SymbolStruct BOOLE_C1 = NumberConstants.BOOLE_C1;
	SymbolStruct BOOLE_C2 = NumberConstants.BOOLE_C2;
	SymbolStruct BOOLE_CLR = NumberConstants.BOOLE_CLR;
	SymbolStruct BOOLE_EQV = NumberConstants.BOOLE_EQV;
	SymbolStruct BOOLE_IOR = NumberConstants.BOOLE_IOR;
	SymbolStruct BOOLE_NAND = NumberConstants.BOOLE_NAND;
	SymbolStruct BOOLE_NOR = NumberConstants.BOOLE_NOR;
	SymbolStruct BOOLE_ORC1 = NumberConstants.BOOLE_ORC1;
	SymbolStruct BOOLE_ORC2 = NumberConstants.BOOLE_ORC2;
	SymbolStruct BOOLE_SET = NumberConstants.BOOLE_SET;
	SymbolStruct BOOLE_XOR = NumberConstants.BOOLE_XOR;
	SymbolStruct CALL_ARGUMENTS_LIMIT = CompilerConstants.CALL_ARGUMENTS_LIMIT;
	SymbolStruct CHAR_CODE_LIMIT = CharacterConstants.CHAR_CODE_LIMIT;
	SymbolStruct DOUBLE_FLOAT_EPSILON = NumberConstants.DOUBLE_FLOAT_EPSILON;
	SymbolStruct DOUBLE_FLOAT_NEGATIVE_EPSILON = NumberConstants.DOUBLE_FLOAT_NEGATIVE_EPSILON;
	SymbolStruct INTERNAL_TIME_UNITS_PER_SECOND = CompilerConstants.INTERNAL_TIME_UNITS_PER_SECOND;
	SymbolStruct LAMBDA_LIST_KEYWORDS = CompilerConstants.LAMBDA_LIST_KEYWORDS;
	SymbolStruct LAMBDA_PARAMETERS_LIMIT = CompilerConstants.LAMBDA_PARAMETERS_LIMIT;
	SymbolStruct LEAST_NEGATIVE_DOUBLE_FLOAT = NumberConstants.LEAST_NEGATIVE_DOUBLE_FLOAT;
	SymbolStruct LEAST_NEGATIVE_LONG_FLOAT = NumberConstants.LEAST_NEGATIVE_LONG_FLOAT;
	SymbolStruct LEAST_NEGATIVE_NORMALIZED_DOUBLE_FLOAT = NumberConstants.LEAST_NEGATIVE_NORMALIZED_DOUBLE_FLOAT;
	SymbolStruct LEAST_NEGATIVE_NORMALIZED_LONG_FLOAT = NumberConstants.LEAST_NEGATIVE_NORMALIZED_LONG_FLOAT;
	SymbolStruct LEAST_NEGATIVE_NORMALIZED_SHORT_FLOAT = NumberConstants.LEAST_NEGATIVE_NORMALIZED_SHORT_FLOAT;
	SymbolStruct LEAST_NEGATIVE_NORMALIZED_SINGLE_FLOAT = NumberConstants.LEAST_NEGATIVE_NORMALIZED_SINGLE_FLOAT;
	SymbolStruct LEAST_NEGATIVE_SHORT_FLOAT = NumberConstants.LEAST_NEGATIVE_SHORT_FLOAT;
	SymbolStruct LEAST_NEGATIVE_SINGLE_FLOAT = NumberConstants.LEAST_NEGATIVE_SINGLE_FLOAT;
	SymbolStruct LEAST_POSITIVE_DOUBLE_FLOAT = NumberConstants.LEAST_POSITIVE_DOUBLE_FLOAT;
	SymbolStruct LEAST_POSITIVE_LONG_FLOAT = NumberConstants.LEAST_POSITIVE_LONG_FLOAT;
	SymbolStruct LEAST_POSITIVE_NORMALIZED_DOUBLE_FLOAT = NumberConstants.LEAST_POSITIVE_NORMALIZED_DOUBLE_FLOAT;
	SymbolStruct LEAST_POSITIVE_NORMALIZED_LONG_FLOAT = NumberConstants.LEAST_POSITIVE_NORMALIZED_LONG_FLOAT;
	SymbolStruct LEAST_POSITIVE_NORMALIZED_SHORT_FLOAT = NumberConstants.LEAST_POSITIVE_NORMALIZED_SHORT_FLOAT;
	SymbolStruct LEAST_POSITIVE_NORMALIZED_SINGLE_FLOAT = NumberConstants.LEAST_POSITIVE_NORMALIZED_SINGLE_FLOAT;
	SymbolStruct LEAST_POSITIVE_SHORT_FLOAT = NumberConstants.LEAST_POSITIVE_SHORT_FLOAT;
	SymbolStruct LEAST_POSITIVE_SINGLE_FLOAT = NumberConstants.LEAST_POSITIVE_SINGLE_FLOAT;
	SymbolStruct LONG_FLOAT_EPSILON = NumberConstants.LONG_FLOAT_EPSILON;
	SymbolStruct LONG_FLOAT_NEGATIVE_EPSILON = NumberConstants.LONG_FLOAT_NEGATIVE_EPSILON;
	SymbolStruct MOST_NEGATIVE_DOUBLE_FLOAT = NumberConstants.MOST_NEGATIVE_DOUBLE_FLOAT;
	SymbolStruct MOST_NEGATIVE_FIXNUM = NumberConstants.MOST_NEGATIVE_FIXNUM;
	SymbolStruct MOST_NEGATIVE_LONG_FLOAT = NumberConstants.MOST_NEGATIVE_LONG_FLOAT;
	SymbolStruct MOST_NEGATIVE_SHORT_FLOAT = NumberConstants.MOST_NEGATIVE_SHORT_FLOAT;
	SymbolStruct MOST_NEGATIVE_SINGLE_FLOAT = NumberConstants.MOST_NEGATIVE_SINGLE_FLOAT;
	SymbolStruct MOST_POSITIVE_DOUBLE_FLOAT = NumberConstants.MOST_POSITIVE_DOUBLE_FLOAT;
	SymbolStruct MOST_POSITIVE_FIXNUM = NumberConstants.MOST_POSITIVE_FIXNUM;
	SymbolStruct MOST_POSITIVE_LONG_FLOAT = NumberConstants.MOST_POSITIVE_LONG_FLOAT;
	SymbolStruct MOST_POSITIVE_SHORT_FLOAT = NumberConstants.MOST_POSITIVE_SHORT_FLOAT;
	SymbolStruct MOST_POSITIVE_SINGLE_FLOAT = NumberConstants.MOST_POSITIVE_SINGLE_FLOAT;
	SymbolStruct MULTIPLE_VALUES_LIMIT = CompilerConstants.MULTIPLE_VALUES_LIMIT;
	SymbolStruct NIL = SymbolConstants.NIL;
	SymbolStruct PI = NumberConstants.PI;
	SymbolStruct SHORT_FLOAT_EPSILON = NumberConstants.SHORT_FLOAT_EPSILON;
	SymbolStruct SHORT_FLOAT_NEGATIVE_EPSILON = NumberConstants.SHORT_FLOAT_NEGATIVE_EPSILON;
	SymbolStruct SINGLE_FLOAT_EPSILON = NumberConstants.SINGLE_FLOAT_EPSILON;
	SymbolStruct SINGLE_FLOAT_NEGATIVE_EPSILON = NumberConstants.SINGLE_FLOAT_NEGATIVE_EPSILON;
	SymbolStruct T = SymbolConstants.T;

	SymbolStruct COMPILATION_SPEED = DeclarationStructImpl.COMPILATION_SPEED;
	SymbolStruct DEBUG = DeclarationStructImpl.DEBUG;
	SymbolStruct DECLARATION = DeclarationStructImpl.DECLARATION;
	SymbolStruct DYNAMIC_EXTENT = DeclarationStructImpl.DYNAMIC_EXTENT;
	SymbolStruct FTYPE = DeclarationStructImpl.FTYPE;
	SymbolStruct IGNORABLE = DeclarationStructImpl.IGNORABLE;
	SymbolStruct IGNORE = DeclarationStructImpl.IGNORE;
	SymbolStruct INLINE = DeclarationStructImpl.INLINE;
	SymbolStruct NOTINLINE = DeclarationStructImpl.NOTINLINE;
	SymbolStruct OPTIMIZE = DeclarationStructImpl.OPTIMIZE;
	SymbolStruct SAFETY = DeclarationStructImpl.SAFETY;
	SymbolStruct SPACE = DeclarationStructImpl.SPACE;
	SymbolStruct SPECIAL = DeclarationStructImpl.SPECIAL;
	SymbolStruct SPEED = DeclarationStructImpl.SPEED;
	SymbolStruct TYPE = DeclarationStructImpl.TYPE;

	SymbolStruct BREAK_ON_SIGNALS_VAR = CompilerVariables.BREAK_ON_SIGNALS;
	SymbolStruct COMPILE_FILE_PATHNAME_VAR = CompilerVariables.COMPILE_FILE_PATHNAME;
	SymbolStruct COMPILE_FILE_TRUENAME_VAR = CompilerVariables.COMPILE_FILE_TRUENAME;
	SymbolStruct COMPILE_PRINT_VAR = CompilerVariables.COMPILE_PRINT;
	SymbolStruct COMPILE_VERBOSE_VAR = CompilerVariables.COMPILE_VERBOSE;
	SymbolStruct DEBUGGER_HOOK_VAR = CompilerVariables.DEBUGGER_HOOK;
	SymbolStruct DEFAULT_PATHNAME_DEFAULTS_VAR = PathnameVariables.DEFAULT_PATHNAME_DEFAULTS;
	SymbolStruct FEATURES_VAR = CompilerVariables.FEATURES;
	SymbolStruct GENSYM_COUNTER_VAR = CompilerVariables.GENSYM_COUNTER;
	SymbolStruct LOAD_PATHNAME_VAR = CompilerVariables.LOAD_PATHNAME;
	SymbolStruct LOAD_PRINT_VAR = CompilerVariables.LOAD_PRINT;
	SymbolStruct LOAD_TRUENAME_VAR = CompilerVariables.LOAD_TRUENAME;
	SymbolStruct LOAD_VERBOSE_VAR = CompilerVariables.LOAD_VERBOSE;
	SymbolStruct MACROEXPAND_HOOK_VAR = CompilerVariables.MACROEXPAND_HOOK;
	SymbolStruct MODULES_VAR = CompilerVariables.MODULES;
	SymbolStruct PACKAGE_VAR = PackageVariables.PACKAGE;
	SymbolStruct PRINT_ARRAY_VAR = PrinterVariables.PRINT_ARRAY;
	SymbolStruct PRINT_BASE_VAR = PrinterVariables.PRINT_BASE;
	SymbolStruct PRINT_CASE_VAR = PrinterVariables.PRINT_CASE;
	SymbolStruct PRINT_CIRCLE_VAR = PrinterVariables.PRINT_CIRCLE;
	SymbolStruct PRINT_ESCAPE_VAR = PrinterVariables.PRINT_ESCAPE;
	SymbolStruct PRINT_GENSYM_VAR = PrinterVariables.PRINT_GENSYM;
	SymbolStruct PRINT_LEVEL_VAR = PrinterVariables.PRINT_LEVEL;
	SymbolStruct PRINT_LENGTH_VAR = PrinterVariables.PRINT_LENGTH;
	SymbolStruct PRINT_LINES_VAR = PrinterVariables.PRINT_LINES;
	SymbolStruct PRINT_MISER_WIDTH_VAR = PrinterVariables.PRINT_MISER_WIDTH;
	SymbolStruct PRINT_PPRINT_DISPATCH_VAR = PrinterVariables.PRINT_PPRINT_DISPATCH;
	SymbolStruct PRINT_PRETTY_VAR = PrinterVariables.PRINT_PRETTY;
	SymbolStruct PRINT_RADIX_VAR = PrinterVariables.PRINT_RADIX;
	SymbolStruct PRINT_READABLY_VAR = PrinterVariables.PRINT_READABLY;
	SymbolStruct PRINT_RIGHT_MARGIN_VAR = PrinterVariables.PRINT_RIGHT_MARGIN;
	SymbolStruct RANDOM_STATE_VAR = NumberVariables.RANDOM_STATE;
	SymbolStruct READ_BASE_VAR = ReaderVariables.READ_BASE;
	SymbolStruct READ_DEFAULT_FLOAT_FORMAT_VAR = ReaderVariables.READ_DEFAULT_FLOAT_FORMAT;
	SymbolStruct READ_EVAL_VAR = ReaderVariables.READ_EVAL;
	SymbolStruct READ_SUPPRESS_VAR = ReaderVariables.READ_SUPPRESS;
	SymbolStruct READTABLE_VAR = ReaderVariables.READTABLE;

	SymbolStruct TERMINAL_IO = GlobalPackageStruct.COMMON_LISP.intern("*TERMINAL-IO*").getSymbol();
	SymbolStruct DEBUG_IO = GlobalPackageStruct.COMMON_LISP.intern("*DEBUG-IO*").getSymbol();
	SymbolStruct ERROR_OUTPUT = GlobalPackageStruct.COMMON_LISP.intern("*ERROR-OUTPUT*").getSymbol();
	SymbolStruct QUERY_IO = GlobalPackageStruct.COMMON_LISP.intern("*QUERY-OUTPUT*").getSymbol();
	SymbolStruct STANDARD_INPUT = GlobalPackageStruct.COMMON_LISP.intern("*STANDARD-INPUT*").getSymbol();
	SymbolStruct STANDARD_OUTPUT = GlobalPackageStruct.COMMON_LISP.intern("*STANDARD-OUTPUT*").getSymbol();
	SymbolStruct TRACE_OUTPUT = GlobalPackageStruct.COMMON_LISP.intern("*TRACE-OUTPUT*").getSymbol();

	SymbolStruct STAR = REPLVariables.STAR;
	SymbolStruct STAR_STAR = REPLVariables.STAR_STAR;
	SymbolStruct STAR_STAR_STAR = REPLVariables.STAR_STAR_STAR;
	SymbolStruct PLUS = REPLVariables.PLUS;
	SymbolStruct PLUS_PLUS = REPLVariables.PLUS_PLUS;
	SymbolStruct PLUS_PLUS_PLUS = REPLVariables.PLUS_PLUS_PLUS;
	SymbolStruct DASH = REPLVariables.DASH;
	SymbolStruct SLASH = REPLVariables.SLASH;
	SymbolStruct SLASH_SLASH = REPLVariables.SLASH_SLASH;
	SymbolStruct SLASH_SLASH_SLASH = REPLVariables.SLASH_SLASH_SLASH;

	SymbolStruct NOT_EQUAL_SIGN = null;
	SymbolStruct ONE_PLUS = null;
	SymbolStruct ONE_MINUS = null;
	SymbolStruct LESS_THAN_SIGN = null;
	SymbolStruct LESS_THAN_EQUAL_SIGN = null;
	SymbolStruct EQUAL_SIGN = null;
	SymbolStruct GREATER_THAN_SIGN = null;
	SymbolStruct GREATER_THAN_EQUAL_SIGN = null;

	SymbolStruct ABORT = null;
	SymbolStruct ABS = null;
	SymbolStruct ACONS = null;
	SymbolStruct ACOS = null;
	SymbolStruct ACOSH = null;
	SymbolStruct ADD_METHOD = null;
	SymbolStruct ADJOIN = null;
	SymbolStruct ADJUST_ARRAY = null;
	SymbolStruct ADJUSTABLE_ARRAY_P = null;
	SymbolStruct ALLOCATE_INSTANCE = null;
	SymbolStruct ALPHA_CHAR_P = null;
	SymbolStruct ALPHANUMERICP = null;
	SymbolStruct AND = GlobalPackageStruct.COMMON_LISP.intern("AND").getSymbol();
	SymbolStruct APPEND = GlobalPackageStruct.COMMON_LISP.intern("APPEND").getSymbol();
	SymbolStruct APPLY = GlobalPackageStruct.COMMON_LISP.intern("APPLY").getSymbol();
	SymbolStruct APROPOS = null;
	SymbolStruct APROPOS_LIST = null;
	SymbolStruct AREF = null;
	SymbolStruct ARITHMETIC_ERROR = null;
	SymbolStruct ARITHMETIC_ERROR_OPERANDS = null;
	SymbolStruct ARITHMETIC_ERROR_OPERATION = null;
	SymbolStruct ARRAY = GlobalPackageStruct.COMMON_LISP.intern("ARRAY").getSymbol();
	SymbolStruct ARRAY_DIMENSION = null;
	SymbolStruct ARRAY_DIMENSIONS = null;
	SymbolStruct ARRAY_DISPLACEMENT = null;
	SymbolStruct ARRAY_ELEMENT_TYPE = null;
	SymbolStruct ARRAY_HAS_FILL_POINTER_P = null;
	SymbolStruct ARRAY_IN_BOUNDS_P = null;
	SymbolStruct ARRAY_RANK = null;
	SymbolStruct ARRAY_ROW_MAJOR_INDEX = null;
	SymbolStruct ARRAY_TOTAL_SIZE = null;
	SymbolStruct ARRAYP = GlobalPackageStruct.COMMON_LISP.intern("ARRAYP").getSymbol();
	SymbolStruct ASH = null;
	SymbolStruct ASIN = null;
	SymbolStruct ASINH = null;
	SymbolStruct ASSERT = null;
	SymbolStruct ASSOC = null;
	SymbolStruct ASSOC_IF = null;
	SymbolStruct ASSOC_IF_NOT = null;
	SymbolStruct ATAN = null;
	SymbolStruct ATANH = null;
	SymbolStruct ATOM = GlobalPackageStruct.COMMON_LISP.intern("ATOM").getSymbol();
	SymbolStruct BASE_CHAR = GlobalPackageStruct.COMMON_LISP.intern("BASE-CHAR").getSymbol();
	SymbolStruct BASE_STRING = GlobalPackageStruct.COMMON_LISP.intern("BASE-STRING").getSymbol();
	SymbolStruct BIGNUM = GlobalPackageStruct.COMMON_LISP.intern("BIGNUM").getSymbol();
	SymbolStruct BIT = GlobalPackageStruct.COMMON_LISP.intern("BIT").getSymbol();
	SymbolStruct BIT_AND = null;
	SymbolStruct BIT_ANDC_1 = null;
	SymbolStruct BIT_ANDC_2 = null;
	SymbolStruct BIT_EQV = null;
	SymbolStruct BIT_IOR = null;
	SymbolStruct BIT_NAND = null;
	SymbolStruct BIT_NOR = null;
	SymbolStruct BIT_NOT = null;
	SymbolStruct BIT_ORC_1 = null;
	SymbolStruct BIT_ORC_2 = null;
	SymbolStruct BIT_VECTOR = null;
	SymbolStruct BIT_VECTOR_P = GlobalPackageStruct.COMMON_LISP.intern("BIT-VECTOR-P").getSymbol();
	SymbolStruct BIT_XOR = null;
	SymbolStruct BLOCK = null;
	SymbolStruct BOOLE = null;
	SymbolStruct BOOLEAN = GlobalPackageStruct.COMMON_LISP.intern("BOOLEAN").getSymbol();
	SymbolStruct BOTH_CASE_P = null;
	SymbolStruct BOUNDP = null;
	SymbolStruct BREAK = null;
	SymbolStruct BROADCAST_STREAM = null;
	SymbolStruct BROADCAST_STREAM_STREAMS = null;
	SymbolStruct BUILT_IN_CLASS = GlobalPackageStruct.COMMON_LISP.intern("BUILT-IN-CLASS").getSymbol();
	SymbolStruct BUTLAST = null;
	SymbolStruct BYTE = null;
	SymbolStruct BYTE_POSITION = null;
	SymbolStruct BYTE_SIZE = null;
	SymbolStruct CAAAAR = null;
	SymbolStruct CAAADR = null;
	SymbolStruct CAAAR = null;
	SymbolStruct CAADAR = null;
	SymbolStruct CAADDR = null;
	SymbolStruct CAADR = null;
	SymbolStruct CAAR = null;
	SymbolStruct CADAAR = null;
	SymbolStruct CADADR = null;
	SymbolStruct CADAR = null;
	SymbolStruct CADDAR = null;
	SymbolStruct CADDDR = null;
	SymbolStruct CADDR = null;
	SymbolStruct CADR = null;
	SymbolStruct CALL_METHOD = null;
	SymbolStruct CALL_NEXT_METHOD = null;
	SymbolStruct CAR = GlobalPackageStruct.COMMON_LISP.intern("CAR").getSymbol();
	SymbolStruct CASE = null;
	SymbolStruct CATCH = null;
	SymbolStruct CCASE = null;
	SymbolStruct CDAAAR = null;
	SymbolStruct CDAADR = null;
	SymbolStruct CDAAR = null;
	SymbolStruct CDADAR = null;
	SymbolStruct CDADDR = null;
	SymbolStruct CDADR = null;
	SymbolStruct CDAR = null;
	SymbolStruct CDDAAR = null;
	SymbolStruct CDDADR = null;
	SymbolStruct CDDAR = null;
	SymbolStruct CDDDAR = null;
	SymbolStruct CDDDDR = null;
	SymbolStruct CDDDR = null;
	SymbolStruct CDDR = null;
	SymbolStruct CDR = GlobalPackageStruct.COMMON_LISP.intern("CDR").getSymbol();
	SymbolStruct CEILING = null;
	SymbolStruct CELL_ERROR = null;
	SymbolStruct CELL_ERROR_NAME = null;
	SymbolStruct CERROR = null;
	SymbolStruct CHANGE_CLASS = null;
	SymbolStruct CHAR = null;
	SymbolStruct CHAR_CODE = null;
	SymbolStruct CHAR_DOWNCASE = null;
	SymbolStruct CHAR_EQUAL = null;
	SymbolStruct CHAR_GREATERP = null;
	SymbolStruct CHAR_INT = null;
	SymbolStruct CHAR_LESSP = null;
	SymbolStruct CHAR_NAME = null;
	SymbolStruct CHAR_NOT_EQUAL = null;
	SymbolStruct CHAR_NOT_GREATERP = null;
	SymbolStruct CHAR_NOT_LESSP = null;
	SymbolStruct CHAR_UPCASE = null;
	SymbolStruct CHAR_NOT_EQUAL_CS = null;       // char/=
	SymbolStruct CHAR_LESSP_CS = null;           // char<
	SymbolStruct CHAR_NOT_GREATERP_CS = null;    // char<=
	SymbolStruct CHAR_EQUAL_CS = null;           // char=
	SymbolStruct CHAR_GREATERP_CS = null;        // char>
	SymbolStruct CHAR_NOT_LESSP_CS = null;       // char>=
	SymbolStruct CHARACTER = GlobalPackageStruct.COMMON_LISP.intern("CHARACTER").getSymbol();
	SymbolStruct CHARACTERP = GlobalPackageStruct.COMMON_LISP.intern("CHARACTERP").getSymbol();
	SymbolStruct CHECK_TYPE = null;
	SymbolStruct CIS = null;
	SymbolStruct CLASS = null;
	SymbolStruct CLASS_NAME = null;
	SymbolStruct CLASS_OF = null;
	SymbolStruct CLEAR_INPUT = null;
	SymbolStruct CLEAR_OUTPUT = null;
	SymbolStruct CLOSE = null;
	SymbolStruct CLRHASH = null;
	SymbolStruct CODE_CHAR = null;
	SymbolStruct COERCE = null;
	SymbolStruct COMPILE = GlobalPackageStruct.COMMON_LISP.intern("COMPILE").getSymbol();
	SymbolStruct COMPILE_FILE = GlobalPackageStruct.COMMON_LISP.intern("COMPILE-FILE").getSymbol();
	SymbolStruct COMPILE_FILE_PATHNAME = GlobalPackageStruct.COMMON_LISP.intern("COMPILE-FILE-PATHNAME").getSymbol();
	SymbolStruct COMPILED_FUNCTION = null;
	SymbolStruct COMPILED_FUNCTION_P = GlobalPackageStruct.COMMON_LISP.intern("COMPILED-FUNCTION-P").getSymbol();
	SymbolStruct COMPILER_MACRO = null;
	SymbolStruct COMPILER_MACRO_FUNCTION = null;
	SymbolStruct COMPLEMENT = null;
	SymbolStruct COMPLEX = null;
	SymbolStruct COMPLEXP = GlobalPackageStruct.COMMON_LISP.intern("COMPLEXP").getSymbol();
	SymbolStruct COMPUTE_APPLICABLE_METHODS = null;
	SymbolStruct COMPUTE_RESTARTS = null;
	SymbolStruct CONCATENATE = null;
	SymbolStruct CONCATENATED_STREAM = null;
	SymbolStruct CONCATENATED_STREAM_STREAMS = null;
	SymbolStruct COND = null;
	SymbolStruct CONDITION = null;
	SymbolStruct CONJUGATE = null;
	SymbolStruct CONS = GlobalPackageStruct.COMMON_LISP.intern("CONS").getSymbol();
	SymbolStruct CONSP = GlobalPackageStruct.COMMON_LISP.intern("CONSP").getSymbol();
	SymbolStruct CONSTANTLY = null;
	SymbolStruct CONSTANTP = null;
	SymbolStruct CONTINUE = null;
	SymbolStruct CONTROL_ERROR = null;
	SymbolStruct COPY_ALIST = null;
	SymbolStruct COPY_LIST = null;
	SymbolStruct COPY_PPRINT_DISPATCH = null;
	SymbolStruct COPY_READTABLE = null;
	SymbolStruct COPY_SEQ = null;
	SymbolStruct COPY_STRUCTURE = null;
	SymbolStruct COPY_SYMBOL = null;
	SymbolStruct COPY_TREE = null;
	SymbolStruct COS = null;
	SymbolStruct COSH = null;
	SymbolStruct COUNT = null;
	SymbolStruct COUNT_IF = null;
	SymbolStruct COUNT_IF_NOT = null;
	SymbolStruct CTYPECASE = null;
	SymbolStruct DECF = null;
	SymbolStruct DECLAIM = null;
	SymbolStruct DECLARE = null;
	SymbolStruct DECODE_FLOAT = null;
	SymbolStruct DECODE_UNIVERSAL_TIME = null;
	SymbolStruct DEFCLASS = null;
	SymbolStruct DEFCONSTANT = null;
	SymbolStruct DEFGENERIC = null;
	SymbolStruct DEFINE_COMPILER_MACRO = null;
	SymbolStruct DEFINE_CONDITION = null;
	SymbolStruct DEFINE_METHOD_COMBINATION = null;
	SymbolStruct DEFINE_MODIFY_MACRO = null;
	SymbolStruct DEFINE_SETF_EXPANDER = null;
	SymbolStruct DEFINE_SYMBOL_MACRO = null;
	SymbolStruct DEFMACRO = GlobalPackageStruct.COMMON_LISP.intern("DEFMACRO").getSymbol();
	SymbolStruct DEFMETHOD = null;
	SymbolStruct DEFPACKAGE = null;
	SymbolStruct DEFPARAMETER = null;
	SymbolStruct DEFSETF = null;
	SymbolStruct DEFSTRUCT = null;
	SymbolStruct DEFTYPE = null;
	SymbolStruct DEFUN = GlobalPackageStruct.COMMON_LISP.intern("DEFUN").getSymbol();
	SymbolStruct DEFVAR = null;
	SymbolStruct DELETE = null;
	SymbolStruct DELETE_DUPLICATES = null;
	SymbolStruct DELETE_FILE = null;
	SymbolStruct DELETE_IF = null;
	SymbolStruct DELETE_IF_NOT = null;
	SymbolStruct DELETE_PACKAGE = null;
	SymbolStruct DENOMINATOR = null;
	SymbolStruct DEPOSIT_FIELD = null;
	SymbolStruct DESCRIBE = null;
	SymbolStruct DESCRIBE_OBJECT = null;
	SymbolStruct DESTRUCTURING_BIND = null;
	SymbolStruct DIGIT_CHAR = null;
	SymbolStruct DIGIT_CHAR_P = null;
	SymbolStruct DIRECTORY = null;
	SymbolStruct DIRECTORY_NAMESTRING = null;
	SymbolStruct DISASSEMBLE = null;
	SymbolStruct DIVISION_BY_ZERO = null;
	SymbolStruct DO = null;
	SymbolStruct DO_STAR = null;
	SymbolStruct DO_ALL_SYMBOLS = null;
	SymbolStruct DO_EXTERNAL_SYMBOLS = null;
	SymbolStruct DO_SYMBOLS = null;
	SymbolStruct DOCUMENTATION = null;
	SymbolStruct DOLIST = null;
	SymbolStruct DOTIMES = null;
	SymbolStruct DOUBLE_FLOAT = GlobalPackageStruct.COMMON_LISP.intern("DOUBLE-FLOAT").getSymbol();
	SymbolStruct DPB = null;
	SymbolStruct DRIBBLE = null;
	SymbolStruct ECASE = null;
	SymbolStruct ECHO_STREAM = null;
	SymbolStruct ECHO_STREAM_INPUT_STREAM = null;
	SymbolStruct ECHO_STREAM_OUTPUT_STREAM = null;
	SymbolStruct ED = null;
	SymbolStruct EIGHTH = null;
	SymbolStruct ELT = null;
	SymbolStruct ENCODE_UNIVERSAL_TIME = null;
	SymbolStruct END_OF_FILE = null;
	SymbolStruct ENDP = null;
	SymbolStruct ENOUGH_NAMESTRING = null;
	SymbolStruct ENSURE_DIRECTORIES_EXIST = null;
	SymbolStruct ENSURE_GENERIC_FUNCTION = null;
	SymbolStruct EQ = GlobalPackageStruct.COMMON_LISP.intern("EQ").getSymbol();
	SymbolStruct EQL = GlobalPackageStruct.COMMON_LISP.intern("EQL").getSymbol();
	SymbolStruct EQUAL = GlobalPackageStruct.COMMON_LISP.intern("EQUAL").getSymbol();
	SymbolStruct EQUALP = GlobalPackageStruct.COMMON_LISP.intern("EQUALP").getSymbol();
	SymbolStruct ERROR = GlobalPackageStruct.COMMON_LISP.intern("ERROR").getSymbol();
	SymbolStruct ETYPECASE = null;
	SymbolStruct EVAL = GlobalPackageStruct.COMMON_LISP.intern("EVAL").getSymbol();
	SymbolStruct EVAL_WHEN = null;
	SymbolStruct EVENP = null;
	SymbolStruct EVERY = null;
	SymbolStruct EXP = null;
	SymbolStruct EXPORT = GlobalPackageStruct.COMMON_LISP.intern("EXPORT").getSymbol();
	SymbolStruct EXPT = null;
	SymbolStruct EXTENDED_CHAR = GlobalPackageStruct.COMMON_LISP.intern("EXTENDED-CHAR").getSymbol();
	SymbolStruct FBOUNDP = null;
	SymbolStruct FCEILING = null;
	SymbolStruct FDEFINITION = null;
	SymbolStruct FFLOOR = null;
	SymbolStruct FIFTH = null;
	SymbolStruct FILE_AUTHOR = null;
	SymbolStruct FILE_ERROR = null;
	SymbolStruct FILE_ERROR_PATHNAME = null;
	SymbolStruct FILE_LENGTH = null;
	SymbolStruct FILE_NAMESTRING = null;
	SymbolStruct FILE_POSITION = null;
	SymbolStruct FILE_STREAM = null;
	SymbolStruct FILE_STRING_LENGTH = null;
	SymbolStruct FILE_WRITE_DATE = null;
	SymbolStruct FILL = null;
	SymbolStruct FILL_POINTER = null;
	SymbolStruct FIND = null;
	SymbolStruct FIND_ALL_SYMBOLS = null;
	SymbolStruct FIND_CLASS = null;
	SymbolStruct FIND_IF = null;
	SymbolStruct FIND_IF_NOT = null;
	SymbolStruct FIND_METHOD = null;
	SymbolStruct FIND_PACKAGE = null;
	SymbolStruct FIND_RESTART = null;
	SymbolStruct FIND_SYMBOL = null;
	SymbolStruct FINISH_OUTPUT = null;
	SymbolStruct FIRST = null;
	SymbolStruct FIXNUM = GlobalPackageStruct.COMMON_LISP.intern("FIXNUM").getSymbol();
	SymbolStruct FLET = null;
	SymbolStruct FLOAT = null;
	SymbolStruct FLOAT_DIGITS = null;
	SymbolStruct FLOAT_PRECISION = null;
	SymbolStruct FLOAT_RADIX = null;
	SymbolStruct FLOAT_SIGN = null;
	SymbolStruct FLOATING_POINT_INEXACT = null;
	SymbolStruct FLOATING_POINT_INVALID_OPERATION = null;
	SymbolStruct FLOATING_POINT_OVERFLOW = null;
	SymbolStruct FLOATING_POINT_UNDERFLOW = null;
	SymbolStruct FLOATP = GlobalPackageStruct.COMMON_LISP.intern("FLOATP").getSymbol();
	SymbolStruct FLOOR = null;
	SymbolStruct FMAKUNBOUND = null;
	SymbolStruct FORCE_OUTPUT = null;
	SymbolStruct FORMAT = null;
	SymbolStruct FORMATTER = null;
	SymbolStruct FOURTH = null;
	SymbolStruct FRESH_LINE = null;
	SymbolStruct FROUND = null;
	SymbolStruct FTRUNCATE = null;
	SymbolStruct FUNCALL = GlobalPackageStruct.COMMON_LISP.intern("FUNCALL").getSymbol();
	SymbolStruct FUNCTION = SpecialOperatorStructImpl.FUNCTION;
	SymbolStruct FUNCTION_KEYWORDS = null;
	SymbolStruct FUNCTION_LAMBDA_EXPRESSION = null;
	SymbolStruct FUNCTIONP = GlobalPackageStruct.COMMON_LISP.intern("FUNCTIONP").getSymbol();
	SymbolStruct GCD = null;
	SymbolStruct GENERIC_FUNCTION = null;
	SymbolStruct GENSYM = GlobalPackageStruct.COMMON_LISP.intern("GENSYM").getSymbol();
	SymbolStruct GENTEMP = GlobalPackageStruct.COMMON_LISP.intern("GENTEMP").getSymbol();
	SymbolStruct GET = null;
	SymbolStruct GET_DECODED_TIME = null;
	SymbolStruct GET_DISPATCH_MACRO_CHARACTER = null;
	SymbolStruct GET_INTERNAL_REAL_TIME = null;
	SymbolStruct GET_INTERNAL_RUN_TIME = null;
	SymbolStruct GET_MACRO_CHARACTER = null;
	SymbolStruct GET_OUTPUT_STREAM_STRING = null;
	SymbolStruct GET_PROPERTIES = null;
	SymbolStruct GET_SETF_EXPANSION = null;
	SymbolStruct GET_UNIVERSAL_TIME = null;
	SymbolStruct GETF = null;
	SymbolStruct GETHASH = null;
	SymbolStruct GO = null;
	SymbolStruct GRAPHIC_CHAR_P = null;
	SymbolStruct HANDLER_BIND = null;
	SymbolStruct HANDLER_CASE = null;
	SymbolStruct HASH_TABLE = null;
	SymbolStruct HASH_TABLE_COUNT = null;
	SymbolStruct HASH_TABLE_P = GlobalPackageStruct.COMMON_LISP.intern("HASH-TABLE-P").getSymbol();
	SymbolStruct HASH_TABLE_REHASH_SIZE = null;
	SymbolStruct HASH_TABLE_REHASH_THRESHOLD = null;
	SymbolStruct HASH_TABLE_SIZE = null;
	SymbolStruct HASH_TABLE_TEST = null;
	SymbolStruct HOST_NAMESTRING = null;
	SymbolStruct IDENTITY = null;
	SymbolStruct IF = null;
	SymbolStruct IGNORE_ERRORS = null;
	SymbolStruct IMAGPART = null;
	SymbolStruct IMPORT = null;
	SymbolStruct IN_PACKAGE = GlobalPackageStruct.COMMON_LISP.intern("IN-PACKAGE").getSymbol();
	SymbolStruct INCF = null;
	SymbolStruct INITIALIZE_INSTANCE = null;
	SymbolStruct INPUT_STREAM_P = null;
	SymbolStruct INSPECT = null;
	SymbolStruct INTEGER = GlobalPackageStruct.COMMON_LISP.intern("INTEGER").getSymbol();
	SymbolStruct INTEGER_DECODE_FLOAT = null;
	SymbolStruct INTEGER_LENGTH = null;
	SymbolStruct INTEGERP = GlobalPackageStruct.COMMON_LISP.intern("INTEGERP").getSymbol();
	SymbolStruct INTERACTIVE_STREAM_P = null;
	SymbolStruct INTERN = null;
	SymbolStruct INTERSECTION = null;
	SymbolStruct INVALID_METHOD_ERROR = null;
	SymbolStruct INVOKE_DEBUGGER = null;
	SymbolStruct INVOKE_RESTART = null;
	SymbolStruct INVOKE_RESTART_INTERACTIVELY = null;
	SymbolStruct ISQRT = null;
	SymbolStruct KEYWORD = null;
	SymbolStruct KEYWORDP = GlobalPackageStruct.COMMON_LISP.intern("KEYWORDP").getSymbol();
	SymbolStruct LABELS = null;
	SymbolStruct LAMBDA = null;
	SymbolStruct LAST = null;
	SymbolStruct LCM = null;
	SymbolStruct LDB = null;
	SymbolStruct LDB_TEST = null;
	SymbolStruct LDIFF = null;
	SymbolStruct LENGTH = null;
	SymbolStruct LET = null;
	SymbolStruct LET_STAR = null;
	SymbolStruct LISP_IMPLEMENTATION_TYPE = null;
	SymbolStruct LISP_IMPLEMENTATION_VERSION = null;
	SymbolStruct LIST = GlobalPackageStruct.COMMON_LISP.intern("LIST").getSymbol();
	SymbolStruct LIST_STAR = GlobalPackageStruct.COMMON_LISP.intern("LIST*").getSymbol();
	SymbolStruct LIST_ALL_PACKAGES = null;
	SymbolStruct LIST_LENGTH = null;
	SymbolStruct LISTEN = null;
	SymbolStruct LISTP = GlobalPackageStruct.COMMON_LISP.intern("LISTP").getSymbol();
	SymbolStruct LOAD = GlobalPackageStruct.COMMON_LISP.intern("LOAD").getSymbol();
	SymbolStruct LOAD_LOGICAL_PATHNAME_TRANSLATIONS = null;
	SymbolStruct LOAD_TIME_VALUE = null;
	SymbolStruct LOCALLY = null;
	SymbolStruct LOG = null;
	SymbolStruct LOGAND = null;
	SymbolStruct LOGANDC1 = null;
	SymbolStruct LOGANDC2 = null;
	SymbolStruct LOGBITP = null;
	SymbolStruct LOGCOUNT = null;
	SymbolStruct LOGEQV = null;
	SymbolStruct LOGICAL_PATHNAME = null;
	SymbolStruct LOGICAL_PATHNAME_TRANSLATIONS = null;
	SymbolStruct LOGIOR = null;
	SymbolStruct LOGNAND = null;
	SymbolStruct LOGNOR = null;
	SymbolStruct LOGNOT = null;
	SymbolStruct LOGORC1 = null;
	SymbolStruct LOGORC2 = null;
	SymbolStruct LOGTEST = null;
	SymbolStruct LOGXOR = null;
	SymbolStruct LONG_FLOAT = GlobalPackageStruct.COMMON_LISP.intern("LONG-FLOAT").getSymbol();
	SymbolStruct LONG_SITE_NAME = null;
	SymbolStruct LOOP = null;
	SymbolStruct LOOP_FINISH = null;
	SymbolStruct LOWER_CASE_P = null;
	SymbolStruct MACHINE_INSTANCE = null;
	SymbolStruct MACHINE_TYPE = null;
	SymbolStruct MACHINE_VERSION = null;
	SymbolStruct MACRO_FUNCTION = null;
	SymbolStruct MACROEXPAND = GlobalPackageStruct.COMMON_LISP.intern("MACROEXPAND").getSymbol();
	SymbolStruct MACROEXPAND_1 = GlobalPackageStruct.COMMON_LISP.intern("MACROEXPAND-1").getSymbol();
	SymbolStruct MACROLET = null;
	SymbolStruct MAKE_ARRAY = null;
	SymbolStruct MAKE_BROADCAST_STREAM = null;
	SymbolStruct MAKE_CONCATENATED_STREAM = null;
	SymbolStruct MAKE_CONDITION = null;
	SymbolStruct MAKE_DISPATCH_MACRO_CHARACTER = null;
	SymbolStruct MAKE_ECHO_STREAM = null;
	SymbolStruct MAKE_HASH_TABLE = null;
	SymbolStruct MAKE_INSTANCE = null;
	SymbolStruct MAKE_INSTANCES_OBSOLETE = null;
	SymbolStruct MAKE_LIST = null;
	SymbolStruct MAKE_LOAD_FORM = null;
	SymbolStruct MAKE_LOAD_FORM_SAVING_SLOTS = null;
	SymbolStruct MAKE_METHOD = null;
	SymbolStruct MAKE_PACKAGE = null;
	SymbolStruct MAKE_PATHNAME = null;
	SymbolStruct MAKE_RANDOM_STATE = null;
	SymbolStruct MAKE_SEQUENCE = null;
	SymbolStruct MAKE_STRING = null;
	SymbolStruct MAKE_STRING_INPUT_STREAM = null;
	SymbolStruct MAKE_STRING_OUTPUT_STREAM = null;
	SymbolStruct MAKE_SYMBOL = null;
	SymbolStruct MAKE_SYNONYM_STREAM = null;
	SymbolStruct MAKE_TWO_WAY_STREAM = null;
	SymbolStruct MAKUNBOUND = null;
	SymbolStruct MAP = null;
	SymbolStruct MAP_INTO = null;
	SymbolStruct MAPC = null;
	SymbolStruct MAPCAN = null;
	SymbolStruct MAPCAR = null;
	SymbolStruct MAPCON = null;
	SymbolStruct MAPHASH = null;
	SymbolStruct MAPL = null;
	SymbolStruct MAPLIST = null;
	SymbolStruct MASK_FIELD = null;
	SymbolStruct MAX = null;
	SymbolStruct MEMBER = null;
	SymbolStruct MEMBER_IF = null;
	SymbolStruct MEMBER_IF_NOT = null;
	SymbolStruct MERGE = null;
	SymbolStruct MERGE_PATHNAMES = null;
	SymbolStruct METHOD = null;
	SymbolStruct METHOD_COMBINATION = null;
	SymbolStruct METHOD_COMBINATION_ERROR = null;
	SymbolStruct METHOD_QUALIFIERS = null;
	SymbolStruct MIN = null;
	SymbolStruct MINUSP = null;
	SymbolStruct MISMATCH = null;
	SymbolStruct MOD = null;
	SymbolStruct MUFFLE_WARNING = null;
	SymbolStruct MULTIPLE_VALUE_BIND = null;
	SymbolStruct MULTIPLE_VALUE_CALL = null;
	SymbolStruct MULTIPLE_VALUE_LIST = null;
	SymbolStruct MULTIPLE_VALUE_PROG_1 = null;
	SymbolStruct MULTIPLE_VALUE_SETQ = null;
	SymbolStruct NAME_CHAR = null;
	SymbolStruct NAMESTRING = null;
	SymbolStruct NBUTLAST = null;
	SymbolStruct NCONC = GlobalPackageStruct.COMMON_LISP.intern("NCONC").getSymbol();
	SymbolStruct NEXT_METHOD_P = null;
	SymbolStruct NINTERSECTION = null;
	SymbolStruct NINTH = null;
	SymbolStruct NO_APPLICABLE_METHOD = null;
	SymbolStruct NO_NEXT_METHOD = null;
	SymbolStruct NOT = null;
	SymbolStruct NOTANY = null;
	SymbolStruct NOTEVERY = null;
	SymbolStruct NRECONC = null;
	SymbolStruct NREVERSE = null;
	SymbolStruct NSET_DIFFERENCE = null;
	SymbolStruct NSET_EXCLUSIVE_OR = null;
	SymbolStruct NSTRING_CAPITALIZE = null;
	SymbolStruct NSTRING_DOWNCASE = null;
	SymbolStruct NSTRING_UPCASE = null;
	SymbolStruct NSUBLIS = null;
	SymbolStruct NSUBST = null;
	SymbolStruct NSUBST_IF = null;
	SymbolStruct NSUBST_IF_NOT = null;
	SymbolStruct NSUBSTITUTE = null;
	SymbolStruct NSUBSTITUTE_IF = null;
	SymbolStruct NSUBSTITUTE_IF_NOT = null;
	SymbolStruct NTH = null;
	SymbolStruct NTH_VALUE = null;
	SymbolStruct NTHCDR = null;
	SymbolStruct NULL = GlobalPackageStruct.COMMON_LISP.intern("NULL").getSymbol();
	SymbolStruct NUMBER = GlobalPackageStruct.COMMON_LISP.intern("NUMBER").getSymbol();
	SymbolStruct NUMBERP = GlobalPackageStruct.COMMON_LISP.intern("NUMBERP").getSymbol();
	SymbolStruct NUMERATOR = null;
	SymbolStruct NUNION = null;
	SymbolStruct ODDP = null;
	SymbolStruct OPEN = null;
	SymbolStruct OPEN_STREAM_P = null;
	SymbolStruct OR = null;
	SymbolStruct OTHERWISE = null;
	SymbolStruct OUTPUT_STREAM_P = null;
	SymbolStruct PACKAGE = null;
	SymbolStruct PACKAGE_ERROR = null;
	SymbolStruct PACKAGE_ERROR_PACKAGE = null;
	SymbolStruct PACKAGE_NAME = null;
	SymbolStruct PACKAGE_NICKNAMES = null;
	SymbolStruct PACKAGE_SHADOWING_SYMBOLS = null;
	SymbolStruct PACKAGE_USE_LIST = null;
	SymbolStruct PACKAGE_USED_BY_LIST = null;
	SymbolStruct PACKAGEP = GlobalPackageStruct.COMMON_LISP.intern("PACKAGEP").getSymbol();
	SymbolStruct PAIRLIS = null;
	SymbolStruct PARSE_ERROR = null;
	SymbolStruct PARSE_INTEGER = null;
	SymbolStruct PARSE_NAMESTRING = null;
	SymbolStruct PATHNAME = null;
	SymbolStruct PATHNAME_DEVICE = null;
	SymbolStruct PATHNAME_DIRECTORY = null;
	SymbolStruct PATHNAME_HOST = null;
	SymbolStruct PATHNAME_MATCH_P = null;
	SymbolStruct PATHNAME_NAME = null;
	SymbolStruct PATHNAME_TYPE = null;
	SymbolStruct PATHNAME_VERSION = null;
	SymbolStruct PATHNAMEP = GlobalPackageStruct.COMMON_LISP.intern("PATHNAMEP").getSymbol();
	SymbolStruct PEEK_CHAR = null;
	SymbolStruct PHASE = null;
	SymbolStruct PLUSP = null;
	SymbolStruct POP = null;
	SymbolStruct POSITION = null;
	SymbolStruct POSITION_IF = null;
	SymbolStruct POSITION_IF_NOT = null;
	SymbolStruct PPRINT = null;
	SymbolStruct PPRINT_DISPATCH = null;
	SymbolStruct PPRINT_EXIT_IF_LIST_EXHAUSTED = null;
	SymbolStruct PPRINT_FILL = null;
	SymbolStruct PPRINT_INDENT = null;
	SymbolStruct PPRINT_LINEAR = null;
	SymbolStruct PPRINT_LOGICAL_BLOCK = null;
	SymbolStruct PPRINT_NEWLINE = null;
	SymbolStruct PPRINT_POP = null;
	SymbolStruct PPRINT_TAB = null;
	SymbolStruct PPRINT_TABULAR = null;
	SymbolStruct PRIN1 = null;
	SymbolStruct PRIN1_TO_STRING = null;
	SymbolStruct PRINC = null;
	SymbolStruct PRINC_TO_STRING = null;
	SymbolStruct PRINT = null;
	SymbolStruct PRINT_NOT_READABLE = null;
	SymbolStruct PRINT_NOT_READABLE_OBJECT = null;
	SymbolStruct PRINT_OBJECT = GlobalPackageStruct.COMMON_LISP.intern("PRINT-OBJECT").getSymbol();
	SymbolStruct PRINT_UNREADABLE_OBJECT = null;
	SymbolStruct PROBE_FILE = null;
	SymbolStruct PROCLAIM = null;
	SymbolStruct PROG = null;
	SymbolStruct PROG_STAR = null;
	SymbolStruct PROG1 = null;
	SymbolStruct PROG2 = null;
	SymbolStruct PROGN = null;
	SymbolStruct PROGRAM_ERROR = null;
	SymbolStruct PROGV = null;
	SymbolStruct PROVIDE = GlobalPackageStruct.COMMON_LISP.intern("PROVIDE").getSymbol();
	SymbolStruct PSETF = null;
	SymbolStruct PSETQ = null;
	SymbolStruct PUSH = null;
	SymbolStruct PUSHNEW = null;
	SymbolStruct QUOTE = SpecialOperatorStructImpl.QUOTE;
	SymbolStruct RANDOM = null;
	SymbolStruct RANDOM_STATE = null;
	SymbolStruct RANDOM_STATE_P = GlobalPackageStruct.COMMON_LISP.intern("RANDOM-STATE-P").getSymbol();
	SymbolStruct RASSOC = null;
	SymbolStruct RASSOC_IF = null;
	SymbolStruct RASSOC_IF_NOT = null;
	SymbolStruct RATIO = null;
	SymbolStruct RATIONAL = GlobalPackageStruct.COMMON_LISP.intern("RATIONAL").getSymbol();
	SymbolStruct RATIONALIZE = null;
	SymbolStruct RATIONALP = GlobalPackageStruct.COMMON_LISP.intern("RATIONALP").getSymbol();
	SymbolStruct READ = GlobalPackageStruct.COMMON_LISP.intern("READ").getSymbol();
	SymbolStruct READ_BYTE = null;
	SymbolStruct READ_CHAR = null;
	SymbolStruct READ_CHAR_NO_HANG = null;
	SymbolStruct READ_DELIMITED_LIST = null;
	SymbolStruct READ_FROM_STRING = null;
	SymbolStruct READ_LINE = null;
	SymbolStruct READ_PRESERVING_WHITESPACE = GlobalPackageStruct.COMMON_LISP.intern("READ-PRESERVING-WHITESPACE").getSymbol();
	SymbolStruct READ_SEQUENCE = null;
	SymbolStruct READER_ERROR = null;
	SymbolStruct READTABLE = null;
	SymbolStruct READTABLE_CASE = null;
	SymbolStruct READTABLEP = GlobalPackageStruct.COMMON_LISP.intern("READTABLEP").getSymbol();
	SymbolStruct REAL = GlobalPackageStruct.COMMON_LISP.intern("REAL").getSymbol();
	SymbolStruct REALP = GlobalPackageStruct.COMMON_LISP.intern("REALP").getSymbol();
	SymbolStruct REALPART = null;
	SymbolStruct REDUCE = null;
	SymbolStruct REINITIALIZE_INSTANCE = null;
	SymbolStruct REM = null;
	SymbolStruct REMF = null;
	SymbolStruct REMHASH = null;
	SymbolStruct REMOVE = null;
	SymbolStruct REMOVE_DUPLICATES = null;
	SymbolStruct REMOVE_IF = null;
	SymbolStruct REMOVE_IF_NOT = null;
	SymbolStruct REMOVE_METHOD = null;
	SymbolStruct REMPROP = null;
	SymbolStruct RENAME_FILE = null;
	SymbolStruct RENAME_PACKAGE = null;
	SymbolStruct REPLACE = null;
	SymbolStruct REQUIRE = GlobalPackageStruct.COMMON_LISP.intern("REQUIRE").getSymbol();
	SymbolStruct REST = null;
	SymbolStruct RESTART = null;
	SymbolStruct RESTART_BIND = null;
	SymbolStruct RESTART_CASE = null;
	SymbolStruct RESTART_NAME = null;
	SymbolStruct RETURN = null;
	SymbolStruct RETURN_FROM = null;
	SymbolStruct REVAPPEND = null;
	SymbolStruct REVERSE = null;
	SymbolStruct ROOM = null;
	SymbolStruct ROTATEF = null;
	SymbolStruct ROUND = null;
	SymbolStruct ROW_MAJOR_AREF = null;
	SymbolStruct RPLACA = null;
	SymbolStruct RPLACD = null;
	SymbolStruct SATISFIES = null;
	SymbolStruct SBIT = null;
	SymbolStruct SCALE_FLOAT = null;
	SymbolStruct SCHAR = null;
	SymbolStruct SEARCH = null;
	SymbolStruct SECOND = null;
	SymbolStruct SEQUENCE = GlobalPackageStruct.COMMON_LISP.intern("SEQUENCE").getSymbol();
	SymbolStruct SERIOUS_CONDITION = null;
	SymbolStruct SET = null;
	SymbolStruct SET_DIFFERENCE = null;
	SymbolStruct SET_DISPATCH_MACRO_CHARACTER = null;
	SymbolStruct SET_EXCLUSIVE_OR = null;
	SymbolStruct SET_MACRO_CHARACTER = null;
	SymbolStruct SET_PPRINT_DISPATCH = null;
	SymbolStruct SET_SYNTAX_FROM_CHAR = null;
	SymbolStruct SETF = GlobalPackageStruct.COMMON_LISP.intern("SETF").getSymbol();
	SymbolStruct SETQ = null;
	SymbolStruct SEVENTH = null;
	SymbolStruct SHADOW = null;
	SymbolStruct SHADOWING_IMPORT = null;
	SymbolStruct SHARED_INITIALIZE = null;
	SymbolStruct SHIFTF = null;
	SymbolStruct SHORT_FLOAT = GlobalPackageStruct.COMMON_LISP.intern("SHORT-FLOAT").getSymbol();
	SymbolStruct SHORT_SITE_NAME = null;
	SymbolStruct SIGNAL = null;
	SymbolStruct SIGNED_BYTE = GlobalPackageStruct.COMMON_LISP.intern("SIGNED-BYTE").getSymbol();
	SymbolStruct SIGNUM = null;
	SymbolStruct SIMPLE_ARRAY = GlobalPackageStruct.COMMON_LISP.intern("SIMPLE-ARRAY").getSymbol();
	SymbolStruct SIMPLE_BASE_STRING = GlobalPackageStruct.COMMON_LISP.intern("SIMPLE-BASE-STRING").getSymbol();
	SymbolStruct SIMPLE_BIT_VECTOR = GlobalPackageStruct.COMMON_LISP.intern("SIMPLE-BIT-VECTOR").getSymbol();
	SymbolStruct SIMPLE_BIT_VECTOR_P = GlobalPackageStruct.COMMON_LISP.intern("SIMPLE-BIT-VECTOR-P").getSymbol();
	SymbolStruct SIMPLE_CONDITION = null;
	SymbolStruct SIMPLE_CONDITION_FORMAT_ARGUMENTS = null;
	SymbolStruct SIMPLE_CONDITION_FORMAT_CONTROL = null;
	SymbolStruct SIMPLE_ERROR = null;
	SymbolStruct SIMPLE_STRING = GlobalPackageStruct.COMMON_LISP.intern("SIMPLE-STRING").getSymbol();
	SymbolStruct SIMPLE_STRING_P = GlobalPackageStruct.COMMON_LISP.intern("SIMPLE-STRING-P").getSymbol();
	SymbolStruct SIMPLE_TYPE_ERROR = null;
	SymbolStruct SIMPLE_VECTOR = null;
	SymbolStruct SIMPLE_VECTOR_P = GlobalPackageStruct.COMMON_LISP.intern("SIMPLE-VECTOR-P").getSymbol();
	SymbolStruct SIMPLE_WARNING = null;
	SymbolStruct SIN = null;
	SymbolStruct SINGLE_FLOAT = GlobalPackageStruct.COMMON_LISP.intern("SINGLE-FLOAT").getSymbol();
	SymbolStruct SINH = null;
	SymbolStruct SIXTH = null;
	SymbolStruct SLEEP = null;
	SymbolStruct SLOT_BOUNDP = null;
	SymbolStruct SLOT_EXISTS_P = null;
	SymbolStruct SLOT_MAKUNBOUND = null;
	SymbolStruct SLOT_MISSING = null;
	SymbolStruct SLOT_UNBOUND = null;
	SymbolStruct SLOT_VALUE = null;
	SymbolStruct SOFTWARE_TYPE = null;
	SymbolStruct SOFTWARE_VERSION = null;
	SymbolStruct SOME = null;
	SymbolStruct SORT = null;
	SymbolStruct SPECIAL_OPERATOR_P = null;
	SymbolStruct SQRT = null;
	SymbolStruct STABLE_SORT = null;
	SymbolStruct STANDARD = null;
	SymbolStruct STANDARD_CHAR = GlobalPackageStruct.COMMON_LISP.intern("STANDARD-CHAR").getSymbol();
	SymbolStruct STANDARD_CHAR_P = null;
	SymbolStruct STANDARD_CLASS = null;
	SymbolStruct STANDARD_GENERIC_FUNCTION = null;
	SymbolStruct STANDARD_METHOD = null;
	SymbolStruct STANDARD_OBJECT = null;
	SymbolStruct STEP = null;
	SymbolStruct STORAGE_CONDITION = null;
	SymbolStruct STORE_VALUE = null;
	SymbolStruct STREAM = null;
	SymbolStruct STREAM_ELEMENT_TYPE = null;
	SymbolStruct STREAM_ERROR = null;
	SymbolStruct STREAM_ERROR_STREAM = null;
	SymbolStruct STREAM_EXTERNAL_FORMAT = null;
	SymbolStruct STREAMP = GlobalPackageStruct.COMMON_LISP.intern("STREAMP").getSymbol();
	SymbolStruct STRING = GlobalPackageStruct.COMMON_LISP.intern("STRING").getSymbol();
	SymbolStruct STRING_CAPITALIZE = null;
	SymbolStruct STRING_DOWNCASE = null;
	SymbolStruct STRING_EQUAL = null;
	SymbolStruct STRING_GREATERP = null;
	SymbolStruct STRING_LEFT_TRIM = null;
	SymbolStruct STRING_LESSP = null;
	SymbolStruct STRING_NOT_EQUAL = null;
	SymbolStruct STRING_NOT_GREATERP = null;
	SymbolStruct STRING_NOT_LESSP = null;
	SymbolStruct STRING_RIGHT_TRIM = null;
	SymbolStruct STRING_STREAM = null;
	SymbolStruct STRING_TRIM = null;
	SymbolStruct STRING_UPCASE = null;
	SymbolStruct STRING_NOT_EQUAL_CS = null;     // string/=
	SymbolStruct STRING_LESSP_CS = null;         // string<
	SymbolStruct STRING_NOT_GREATERP_CS = null;  // string<=
	SymbolStruct STRING_EQUAL_CS = null;         // string=
	SymbolStruct STRING_GREATERP_CS = null;      // string>
	SymbolStruct STRING_NOT_LESSP_CS = null;     // string>=
	SymbolStruct STRINGP = GlobalPackageStruct.COMMON_LISP.intern("STRINGP").getSymbol();
	SymbolStruct STRUCTURE = null;
	SymbolStruct STRUCTURE_CLASS = null;
	SymbolStruct STRUCTURE_OBJECT = null;
	SymbolStruct STYLE_WARNING = null;
	SymbolStruct SUBLIS = null;
	SymbolStruct SUBSEQ = null;
	SymbolStruct SUBSETP = null;
	SymbolStruct SUBST = null;
	SymbolStruct SUBST_IF = null;
	SymbolStruct SUBST_IF_NOT = null;
	SymbolStruct SUBSTITUTE = null;
	SymbolStruct SUBSTITUTE_IF = null;
	SymbolStruct SUBSTITUTE_IF_NOT = null;
	SymbolStruct SUBTYPEP = null;
	SymbolStruct SVREF = null;
	SymbolStruct SXHASH = null;
	SymbolStruct SYMBOL = GlobalPackageStruct.COMMON_LISP.intern("SYMBOL").getSymbol();
	SymbolStruct SYMBOL_FUNCTION = null;
	SymbolStruct SYMBOL_MACROLET = null;
	SymbolStruct SYMBOL_NAME = null;
	SymbolStruct SYMBOL_PACKAGE = null;
	SymbolStruct SYMBOL_PLIST = null;
	SymbolStruct SYMBOL_VALUE = null;
	SymbolStruct SYMBOLP = GlobalPackageStruct.COMMON_LISP.intern("SYMBOLP").getSymbol();
	SymbolStruct SYNONYM_STREAM = null;
	SymbolStruct SYNONYM_STREAM_SYMBOL = null;
	SymbolStruct TAGBODY = null;
	SymbolStruct TAILP = null;
	SymbolStruct TAN = null;
	SymbolStruct TANH = null;
	SymbolStruct TENTH = null;
	SymbolStruct TERPRI = null;
	SymbolStruct THE = null;
	SymbolStruct THIRD = null;
	SymbolStruct THROW = null;
	SymbolStruct TIME = null;
	SymbolStruct TRACE = null;
	SymbolStruct TRANSLATE_LOGICAL_PATHNAME = null;
	SymbolStruct TRANSLATE_PATHNAME = null;
	SymbolStruct TREE_EQUAL = null;
	SymbolStruct TRUENAME = null;
	SymbolStruct TRUNCATE = null;
	SymbolStruct TWO_WAY_STREAM = null;
	SymbolStruct TWO_WAY_STREAM_INPUT_STREAM = null;
	SymbolStruct TWO_WAY_STREAM_OUTPUT_STREAM = null;
	SymbolStruct TYPE_ERROR = null;
	SymbolStruct TYPE_ERROR_DATUM = null;
	SymbolStruct TYPE_ERROR_EXPECTED_TYPE = null;
	SymbolStruct TYPE_OF = null;
	SymbolStruct TYPECASE = null;
	SymbolStruct TYPEP = null;
	SymbolStruct UNBOUND_SLOT = null;
	SymbolStruct UNBOUND_SLOT_INSTANCE = null;
	SymbolStruct UNBOUND_VARIABLE = null;
	SymbolStruct UNDEFINED_FUNCTION = null;
	SymbolStruct UNEXPORT = null;
	SymbolStruct UNINTERN = null;
	SymbolStruct UNION = null;
	SymbolStruct UNLESS = null;
	SymbolStruct UNREAD_CHAR = null;
	SymbolStruct UNSIGNED_BYTE = GlobalPackageStruct.COMMON_LISP.intern("UNSIGNED-BYTE").getSymbol();
	SymbolStruct UNTRACE = null;
	SymbolStruct UNUSE_PACKAGE = null;
	SymbolStruct UNWIND_PROTECT = null;
	SymbolStruct UPDATE_INSTANCE_FOR_DIFFERENT_CLASS = null;
	SymbolStruct UPDATE_INSTANCE_FOR_REDEFINED_CLASS = null;
	SymbolStruct UPGRADED_ARRAY_ELEMENT_TYPE = null;
	SymbolStruct UPGRADED_COMPLEX_PART_TYPE = null;
	SymbolStruct UPPER_CASE_P = null;
	SymbolStruct USE_PACKAGE = null;
	SymbolStruct USE_VALUE = null;
	SymbolStruct USER_HOMEDIR_PATHNAME = null;
	SymbolStruct VALUES = GlobalPackageStruct.COMMON_LISP.intern("VALUES").getSymbol();
	SymbolStruct VALUES_LIST = null;
	SymbolStruct VARIABLE = null;
	SymbolStruct VECTOR = null;
	SymbolStruct VECTOR_POP = null;
	SymbolStruct VECTOR_PUSH = null;
	SymbolStruct VECTOR_PUSH_EXTEND = null;
	SymbolStruct VECTORP = GlobalPackageStruct.COMMON_LISP.intern("VECTORP").getSymbol();
	SymbolStruct WARN = null;
	SymbolStruct WARNING = null;
	SymbolStruct WHEN = null;
	SymbolStruct WILD_PATHNAME_P = null;
	SymbolStruct WITH_ACCESSORS = null;
	SymbolStruct WITH_COMPILATION_UNIT = null;
	SymbolStruct WITH_CONDITION_RESTARTS = null;
	SymbolStruct WITH_HASH_TABLE_ITERATOR = null;
	SymbolStruct WITH_INPUT_FROM_STRING = null;
	SymbolStruct WITH_OPEN_FILE = null;
	SymbolStruct WITH_OPEN_STREAM = null;
	SymbolStruct WITH_OUTPUT_TO_STRING = null;
	SymbolStruct WITH_PACKAGE_ITERATOR = null;
	SymbolStruct WITH_SIMPLE_RESTART = null;
	SymbolStruct WITH_SLOTS = null;
	SymbolStruct WITH_STANDARD_IO_SYNTAX = null;
	SymbolStruct WRITE = null;
	SymbolStruct WRITE_BYTE = null;
	SymbolStruct WRITE_CHAR = null;
	SymbolStruct WRITE_LINE = null;
	SymbolStruct WRITE_SEQUENCE = null;
	SymbolStruct WRITE_STRING = null;
	SymbolStruct WRITE_TO_STRING = null;
	SymbolStruct Y_OR_N_P = null;
	SymbolStruct YES_OR_NO_P = null;
	SymbolStruct ZEROP = null;

	// System
	SymbolStruct SYSTEM_IN_PACKAGE = GlobalPackageStruct.SYSTEM.intern("%IN-PACKAGE").getSymbol();
	SymbolStruct SET_SYMBOL_FUNCTION = GlobalPackageStruct.SYSTEM.intern("SET-SYMBOL-FUNCTION").getSymbol();
	SymbolStruct SET_SYMBOL_MACRO = GlobalPackageStruct.SYSTEM.intern("SET-SYMBOL-MACRO").getSymbol();
	SymbolStruct SET_SYMBOL_SETF_FUNCTION = GlobalPackageStruct.SYSTEM.intern("SET-SYMBOL-SETF-FUNCTION").getSymbol();
	SymbolStruct LIST_TO_VECTOR = GlobalPackageStruct.SYSTEM.intern("LIST-TO-VECTOR").getSymbol();
	SymbolStruct READ_DISPATCH_CHARACTER = GlobalPackageStruct.SYSTEM.intern("READ-DISPATCH-CHARACTER").getSymbol();
	SymbolStruct BIND_SYMBOL_FUNCTION = GlobalPackageStruct.SYSTEM.intern("BIND-SYMBOL-FUNCTION").getSymbol();
	SymbolStruct UNBIND_SYMBOL_FUNCTION = GlobalPackageStruct.SYSTEM.intern("UNBIND-SYMBOL-FUNCTION").getSymbol();

	// Backquote
	SymbolStruct BQ_COMMA_FLAG = GlobalPackageStruct.BACKQUOTE.intern(",").getSymbol();
	SymbolStruct BQ_AT_FLAG = GlobalPackageStruct.BACKQUOTE.intern(",@").getSymbol();
	SymbolStruct BQ_DOT_FLAG = GlobalPackageStruct.BACKQUOTE.intern(",.").getSymbol();
	SymbolStruct BQ_VECTOR_FLAG = GlobalPackageStruct.BACKQUOTE.intern("bqv").getSymbol();

	// Standard Keywords
	KeywordStruct ELEMENT_TYPE_KEYWORD = KeywordStruct.toLispKeyword("ELEMENT-TYPE");
	KeywordStruct INITIAL_ELEMENT_KEYWORD = KeywordStruct.toLispKeyword("INITIAL-ELEMENT");
	KeywordStruct INITIAL_CONTENTS_KEYWORD = KeywordStruct.toLispKeyword("INITIAL-CONTENTS");

	// Package Keywords
	KeywordStruct INTERNAL_KEYWORD = KeywordStruct.toLispKeyword("INTERNAL");
	KeywordStruct EXTERNAL_KEYWORD = KeywordStruct.toLispKeyword("EXTERNAL");
	KeywordStruct INHERITED_KEYWORD = KeywordStruct.toLispKeyword("INHERITED");

	// Stream Keywords
	KeywordStruct DEFAULT_KEYWORD = KeywordStruct.toLispKeyword("DEFAULT");
	KeywordStruct ABORT_KEYWORD = KeywordStruct.toLispKeyword("ABORT");
	KeywordStruct START_KEYWORD = KeywordStruct.toLispKeyword("START");
	KeywordStruct END_KEYWORD = KeywordStruct.toLispKeyword("END");
	KeywordStruct DIRECTION_KEYWORD = KeywordStruct.toLispKeyword("DIRECTION");
	KeywordStruct INPUT_KEYWORD = KeywordStruct.toLispKeyword("INPUT");
	KeywordStruct OUTPUT_KEYWORD = KeywordStruct.toLispKeyword("OUTPUT");
	KeywordStruct IO_KEYWORD = KeywordStruct.toLispKeyword("IO");
	KeywordStruct PROBE_KEYWORD = KeywordStruct.toLispKeyword("PROBE");
	KeywordStruct IF_EXISTS_KEYWORD = KeywordStruct.toLispKeyword("IF-EXISTS");
	KeywordStruct ERROR_KEYWORD = KeywordStruct.toLispKeyword("ERROR");
	KeywordStruct NEW_VERSION_KEYWORD = KeywordStruct.toLispKeyword("NEW-VERSION");
	KeywordStruct RENAME_KEYWORD = KeywordStruct.toLispKeyword("RENAME");
	KeywordStruct RENAME_AND_DELETE_KEYWORD = KeywordStruct.toLispKeyword("RENAME-AND-DELETE");
	KeywordStruct OVERWRITE_KEYWORD = KeywordStruct.toLispKeyword("OVERWRITE");
	KeywordStruct APPEND_KEYWORD = KeywordStruct.toLispKeyword("APPEND");
	KeywordStruct SUPERSEDE_KEYWORD = KeywordStruct.toLispKeyword("SUPERSEDE");
	KeywordStruct CREATE_KEYWORD = KeywordStruct.toLispKeyword("CREATE");

	// Readtable Keywords
//	KeywordStruct UPCASE_KEYWORD = KeywordStruct.toLispKeyword("UPCASE");
//	KeywordStruct DOWNCASE_KEYWORD = KeywordStruct.toLispKeyword("DOWNCASE");
	KeywordStruct PRESERVE_KEYWORD = KeywordStruct.toLispKeyword("PRESERVE");
	KeywordStruct INVERT_KEYWORD = KeywordStruct.toLispKeyword("INVERT");

	// Features Keywords
	/**
	 * NOT {@link KeywordStruct} for processing features that should 'not' be included.
	 */
	KeywordStruct NOT_KEYWORD = KeywordStruct.toLispKeyword("NOT");

	/**
	 * AND {@link KeywordStruct} for processing features that should be included via 'and' operation.
	 */
	KeywordStruct AND_KEYWORD = KeywordStruct.toLispKeyword("AND");

	/**
	 * OR {@link KeywordStruct} for processing features that should be included via 'or' operation.
	 */
	KeywordStruct OR_KEYWORD = KeywordStruct.toLispKeyword("OR");

	// Eval-When Keywords
	KeywordStruct COMPILE_TOPLEVEL = KeywordStruct.toLispKeyword("COMPILE-TOPLEVEL");
	KeywordStruct LOAD_TOPLEVEL = KeywordStruct.toLispKeyword("LOAD-TOPLEVEL");
	KeywordStruct EXECUTE = KeywordStruct.toLispKeyword("EXECUTE");

	// Print-Case Keywords
	KeywordStruct UPCASE_KEYWORD = KeywordStruct.toLispKeyword("UPCASE");
	KeywordStruct DOWNCASE_KEYWORD = KeywordStruct.toLispKeyword("DOWNCASE");
	KeywordStruct CAPITALIZE_KEYWORD = KeywordStruct.toLispKeyword("CAPITALIZE");

	// Pathname Keywords
	KeywordStruct WILD_KEYWORD = KeywordStruct.toLispKeyword("WILD");
	KeywordStruct WILD_INFERIORS_KEYWORD = KeywordStruct.toLispKeyword("WILD-INFERIORS");
	KeywordStruct UNSPECIFIC_KEYWORD = KeywordStruct.toLispKeyword("UNSPECIFIC");
	KeywordStruct COMMON_KEYWORD = KeywordStruct.toLispKeyword("COMMON");
	KeywordStruct LOCAL_KEYWORD = KeywordStruct.toLispKeyword("LOCAL");
	KeywordStruct RELATIVE_KEYWORD = KeywordStruct.toLispKeyword("RELATIVE");
	KeywordStruct ABSOLUTE_KEYWORD = KeywordStruct.toLispKeyword("ABSOLUTE");
	KeywordStruct BACK_KEYWORD = KeywordStruct.toLispKeyword("BACK");
	KeywordStruct UP_KEYWORD = KeywordStruct.toLispKeyword("UP");
	KeywordStruct NEWEST_KEYWORD = KeywordStruct.toLispKeyword("NEWEST");
	KeywordStruct OLDEST_KEYWORD = KeywordStruct.toLispKeyword("OLDEST");
	KeywordStruct CASE_KEYWORD = KeywordStruct.toLispKeyword("CASE");
	KeywordStruct HOST_KEYWORD = KeywordStruct.toLispKeyword("HOST");
	KeywordStruct DEVICE_KEYWORD = KeywordStruct.toLispKeyword("DEVICE");
	KeywordStruct DIRECTORY_KEYWORD = KeywordStruct.toLispKeyword("DIRECTORY");
	KeywordStruct NAME_KEYWORD = KeywordStruct.toLispKeyword("NAME");
	KeywordStruct TYPE_KEYWORD = KeywordStruct.toLispKeyword("TYPE");
	KeywordStruct VERSION_KEYWORD = KeywordStruct.toLispKeyword("VERSION");

	// Pathname URL Keywords
	KeywordStruct SCHEME_KEYWORD = KeywordStruct.toLispKeyword("SCHEME");
	KeywordStruct AUTHORITY_KEYWORD = KeywordStruct.toLispKeyword("AUTHORITY");
	KeywordStruct QUERY_KEYWORD = KeywordStruct.toLispKeyword("QUERY");
	KeywordStruct FRAGMENT_KEYWORD = KeywordStruct.toLispKeyword("FRAGMENT");

	// Compile-File/Load Keywords
	KeywordStruct OUTPUT_FILE_KEYWORD = KeywordStruct.toLispKeyword("OUTPUT-FILE");
	KeywordStruct VERBOSE_KEYWORD = KeywordStruct.toLispKeyword("VERBOSE");
	KeywordStruct PRINT_KEYWORD = KeywordStruct.toLispKeyword("PRINT");
	KeywordStruct IF_DOES_NOT_EXIST_KEYWORD = KeywordStruct.toLispKeyword("IF-DOES-NOT-EXIST");
	KeywordStruct EXTERNAL_FORMAT_KEYWORD = KeywordStruct.toLispKeyword("EXTERNAL-FORMAT");

	// Make-Package Keywords
	KeywordStruct NICKNAMES_KEYWORD = KeywordStruct.toLispKeyword("NICKNAMES");
	KeywordStruct USE_KEYWORD = KeywordStruct.toLispKeyword("USE");

	// Lambda List Keywords
	KeywordStruct ALLOW_OTHER_KEYS = KeywordStruct.toLispKeyword("ALLOW-OTHER-KEYS");

	// Extension
	SymbolStruct JCLASS = GlobalPackageStruct.EXTENSIONS.intern("JCLASS").getSymbol();
	SymbolStruct JINVOKE = GlobalPackageStruct.EXTENSIONS.intern("JINVOKE").getSymbol();
	SymbolStruct JINVOKE_STATIC = GlobalPackageStruct.EXTENSIONS.intern("JINVOKE-STATIC").getSymbol();
	SymbolStruct JMETHOD = GlobalPackageStruct.EXTENSIONS.intern("JMETHOD").getSymbol();
	SymbolStruct JNEW = GlobalPackageStruct.EXTENSIONS.intern("JNEW").getSymbol();

	SymbolStruct NIL_VECTOR = GlobalPackageStruct.EXTENSIONS.intern("NIL-VECTOR").getSymbol();

	SymbolStruct WHITESPACEP = GlobalPackageStruct.EXTENSIONS.intern("WHITESPACEP").getSymbol();

	SymbolStruct STRING_INPUT_STREAM = GlobalPackageStruct.EXTENSIONS.intern("STRING-INPUT-STREAM").getSymbol();
	SymbolStruct STRING_OUTPUT_STREAM = GlobalPackageStruct.EXTENSIONS.intern("STRING-OUTPUT-STREAM").getSymbol();

	SymbolStruct FREE_MEMORY = GlobalPackageStruct.EXTENSIONS.intern("FREE-MEMORY").getSymbol();
	SymbolStruct GC = GlobalPackageStruct.EXTENSIONS.intern("GC").getSymbol();
	SymbolStruct HELP = GlobalPackageStruct.EXTENSIONS.intern("HELP").getSymbol();
	SymbolStruct MAX_MEMORY = GlobalPackageStruct.EXTENSIONS.intern("MAX-MEMORY").getSymbol();
	SymbolStruct TOTAL_MEMORY = GlobalPackageStruct.EXTENSIONS.intern("TOTAL-MEMORY").getSymbol();

	SymbolStruct QUIT = GlobalPackageStruct.EXTENSIONS.intern("QUIT").getSymbol();
}
