<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2011-2014 Cody Nelson - All rights reserved.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Printer -->

	<util:map id="printerStrategies"
	          key-type="java.lang.Class"
	          value-type="jcl.printer.LispPrinter">

		<entry key="jcl.arrays.ArrayStruct" value-ref="arrayStructPrinter"/>
		<entry key="jcl.arrays.BitVectorStruct" value-ref="bitVectorStructPrinter"/>
		<entry key="jcl.arrays.StringStruct" value-ref="stringStructPrinter"/>
		<entry key="jcl.arrays.VectorStruct" value-ref="vectorStructPrinter"/>

		<entry key="jcl.characters.CharacterStruct" value-ref="characterStructPrinter"/>

		<entry key="jcl.hashtables.HashTableStruct" value-ref="hashTableStructPrinter"/>
		<entry key="jcl.hashtables.HashTableStruct.KeyWrapper" value-ref="hashTableKeyWrapperPrinter"/>

		<entry key="jcl.lists.ConsStruct" value-ref="consStructPrinter"/>
		<entry key="jcl.lists.NullStruct" value-ref="nullStructPrinter"/>

		<entry key="jcl.numbers.ComplexStruct" value-ref="complexStructPrinter"/>
		<entry key="jcl.numbers.FloatStruct" value-ref="floatStructPrinter"/>
		<entry key="jcl.numbers.IntegerStruct" value-ref="integerStructPrinter"/>
		<entry key="jcl.numbers.RatioStruct" value-ref="ratioStructPrinter"/>

		<entry key="jcl.packages.PackageStruct" value-ref="packageStructPrinter"/>

		<entry key="jcl.pathnames.PathnameStruct" value-ref="pathnameStructPrinter"/>

		<entry key="jcl.reader.macrofunction.CommentStruct" value-ref="commentStructPrinter"/>

		<entry key="jcl.streams.EchoStreamStruct" value-ref="echoStreamStructPrinter"/>
		<entry key="jcl.streams.SynonymStreamStruct" value-ref="synonymStreamStructPrinter"/>
		<entry key="jcl.streams.TwoWayStreamStruct" value-ref="twoWayStreamStructPrinter"/>

		<entry key="jcl.symbols.Constant" value-ref="symbolStructPrinter"/>
		<entry key="jcl.symbols.Declaration" value-ref="symbolStructPrinter"/>
		<entry key="jcl.symbols.KeywordSymbolStruct" value-ref="symbolStructPrinter"/>
		<entry key="jcl.symbols.SymbolStruct" value-ref="symbolStructPrinter"/>
		<entry key="jcl.symbols.SpecialOperator" value-ref="symbolStructPrinter"/>
		<entry key="jcl.symbols.TStruct" value-ref="symbolStructPrinter"/>
		<entry key="jcl.symbols.NILStruct" value-ref="symbolStructPrinter"/>
		<entry key="jcl.symbols.Variable" value-ref="symbolStructPrinter"/>

	</util:map>

	<!-- Semantic Analyzer -->

	<util:map id="analyzerStrategies"
	          key-type="java.lang.Class"
	          value-type="jcl.compiler.real.sa.Analyzer">

		<entry key="jcl.arrays.StringStruct" value-ref="constantAnalyzer"/>

		<entry key="jcl.characters.CharacterStruct" value-ref="constantAnalyzer"/>

		<entry key="jcl.lists.ConsStruct" value-ref="consAnalyzer"/>
		<entry key="jcl.lists.NullStruct" value-ref="constantAnalyzer"/>

		<entry key="jcl.numbers.FloatStruct" value-ref="constantAnalyzer"/>
		<entry key="jcl.numbers.IntegerStruct" value-ref="constantAnalyzer"/>
		<entry key="jcl.numbers.RatioStruct" value-ref="constantAnalyzer"/>

		<entry key="jcl.reader.macrofunction.CommentStruct" value-ref="constantAnalyzer"/>

		<entry key="jcl.symbols.SymbolStruct" value-ref="lexicalSymbolAnalyzer"/>

	</util:map>

	<util:map id="functionCallAnalyzerStrategies"
	          key-type="java.lang.Class"
	          value-type="jcl.compiler.real.sa.Analyzer">

		<entry key="jcl.lists.ConsStruct" value-ref="lambdaFunctionCallAnalyzer"/>
		<entry key="jcl.lists.NullStruct" value-ref="constantAnalyzer"/>

		<entry key="jcl.symbols.SymbolStruct" value-ref="symbolFunctionCallAnalyzer"/>

	</util:map>

	<util:map id="goStructGeneratorStrategies"
	          key-type="java.lang.Class"
	          value-type="jcl.compiler.real.struct.specialoperator.go.GoStructGenerator">

		<entry key="jcl.symbols.SymbolStruct" value-ref="goSymbolStructGenerator"/>
		<entry key="jcl.numbers.IntegerStruct" value-ref="goIntegerStructGenerator"/>
	</util:map>

	<!-- Intermediate Code Generator -->

	<util:map id="codeGeneratorStrategies"
	          key-type="java.lang.Class"
	          value-type="jcl.compiler.real.icg.CodeGenerator">

	</util:map>

</beans>